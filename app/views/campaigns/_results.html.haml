.bg-light.p-3
  %h4.h5.m-3.clearfix
    Résultats

    .float-right
      = link_to structure_campaign_path(@structure, @campaign, format: :pdf), target: '_blank', class: "btn btn-success" do
        = icon 'fa', "file-pdf"
        Télécharger au format PDF

  - if @campaign.closed?
    %table.table.table-bordered
      %tr
        %td
        %th{colspan: 6} Resultats retenus
        %th{colspan: 6} Resultats consultatifs

      %tr
        %th Electorats
        %th{colspan: 6}= @campaign.motions.map{ |m| m.votes.officials.count }.first
        %th{colspan: 6}= @campaign.motions.map{ |m| m.votes.consultatives.count }.first


      - unless @campaign.motions.where(kind: :binary).blank?
        %tr
          %th
          %th Oui
          %th{colspan: 2} Non
          %th Votants
          %th Exprimés
          %th Blancs

          %th Oui
          %th{colspan: 2} Non
          %th Votants
          %th Exprimés
          %th Blancs

        - @campaign.motions.where(kind: :binary).each do |motion|
          - oui_count = motion.votes.officials.where(result: "oui").count
          - non_count = motion.votes.officials.where(result: "non").count
          %tr
            %td= motion.name
            %td
              = oui_count
              %small= "(#{number_to_percentage (oui_count.to_f/(oui_count+non_count).to_f)*100, precision: 2})"

            %td{colspan: 2}
              = non_count
              %small= "(#{number_to_percentage (non_count.to_f/(oui_count+non_count).to_f)*100, precision: 2})"
            %td
              = motion.votes.officials.count
            %td
              = motion.votes.officials.where("result IS NOT NULL").count
            %td
              = motion.votes.officials.where(result: nil).count

            %td= motion.votes.consultatives.where(result: "oui").count
            %td{colspan: 2}= motion.votes.consultatives.where(result: "non").count
            %td= motion.votes.consultatives.count
            %td= motion.votes.consultatives.where("result IS NOT NULL").count
            %td= motion.votes.consultatives.where(result: nil).count


      - unless @campaign.motions.where(kind: :neutral).blank?
        %tr
          %th
          %th Oui
          %th Non
          %th Neutre
          %th Votants
          %th Exprimés
          %th Blancs
          %th Oui
          %th Non
          %th Neutre
          %th Votants
          %th Exprimés
          %th Blancs
        - @campaign.motions.where(kind: :neutral).each do |motion|
          %tr
            %td= motion.name
            %td= motion.votes.officials.where(result: "oui").count
            %td= motion.votes.officials.where(result: "non").count
            %td= motion.votes.officials.where(result: "neutre").count
            %td= motion.votes.officials.count
            %td= motion.votes.officials.where("result IS NOT NULL").count
            %td= motion.votes.officials.where(result: nil).count

            %td= motion.votes.consultatives.where(result: "oui").count
            %td= motion.votes.consultatives.where(result: "non").count
            %td= motion.votes.consultatives.where(result: "neutre").count
            %td= motion.votes.consultatives.count
            %td= motion.votes.consultatives.where("result IS NOT NULL").count
            %td= motion.votes.consultatives.where(result: nil).count

      - unless @campaign.motions.where(kind: :free).blank?
        %tr
          %th
          %th{colspan: 3} Répartition des propositions
          %th Votants
          %th Exprimés
          %th Blancs
        - @campaign.motions.where(kind: :free).each do |motion|
          %tr
            %td= motion.name
            %td{colspan: 3}
              %ul.list-unstyled
                - motion.votes.officials.select(:result, 'COUNT(*) as count').group(:result).each do |r|
                  %li.list-unstyled-item= "#{r.result} (#{r.count})"
            %td= motion.votes.officials.count
            %td= motion.votes.officials.where("result IS NOT NULL").count
            %td= motion.votes.officials.where(result: nil).count

            %td{colspan: 3}
              %ul.list-unstyled
                - motion.votes.consultatives.select(:result, 'COUNT(*) as count').group(:result).each do |r|
                  %li.list-unstyled-item= "#{r.result} (#{r.count})"
            %td= motion.votes.consultatives.count
            %td= motion.votes.consultatives.where("result IS NOT NULL").count
            %td= motion.votes.consultatives.where(result: nil).count

    %h4.h5.m-3 Liste de votants

    %table.table.table-bordered
      %tr
        %th Nom
        %th Ville
      - @campaign.motions.each do |motion|
        %tr.bg-info
          %td{colspan: 2}= motion.name
        - motion.voters.each do |voter|
          - if voter.resource
            %tr
              %td= voter.resource.name
              %td= voter.resource.town
          - else
            %tr
              %td{colspan: 2}
                %em.text-warning= "Le votant n'existe plus (#{voter.resource_type} - #{voter.resource_id})"

  - elsif @campaign.coming?
    .alert.alert-danger
      La campagne de vote n'est pas commencé.

  - elsif @campaign.opened?
    .alert.alert-success
      La campagne de vote est en cours.
      %br
      %b Votes retenus :
      = "#{@campaign.motions.map{ |m| m.votes.officials.count }.first} ont voté / #{@structure.members.count} membres"
      %br
      %b Votes consultatifs :
      = "Il y a #{@campaign.motions.map{ |m| m.votes.consultatives.count}.first} votes consultatifs"