.breadcrumbs
  .page-header
    %h1
      Gestion de la structure
      %b= @structure.name


.content.mt-3
  .container-fluid
    .row
      .col-md-12
        = render 'structures/infos', structure: @structure

      .col-md-12
        .card
          .card-header
            .float-left= render 'structures/navbar', structure: @structure
            .card-actions.float-right
              = link_to structure_campaigns_path(@structure), class: 'btn btn-sm btn-default' do
                = icon 'angle-left'
                Revenir aux campagnes

          .card-body
            - if @campaign.is_public
              .alert.alert-success.mb-3 Campagne publique
            %h2.h3
              = "Campagne : #{@campaign.name}"

              - if Time.now < @campaign.start_at
                .float-right
                  = link_to [:edit, @structure.becomes(Structure), @campaign], class: "btn btn-success btn-sm m-3" do
                    = icon "edit"
                    Modifier la campagne


              - elsif Time.now > @campaign.end_at
                .float-right.m-3
                  %span.alert.alert-info Votes cloturés
              - else
                .float-right.m-3
                  %span.alert.alert-danger Période de vote

            .clearfix

            %p.text-muted= @campaign.description

            .bg-light.p-3.mb-3
              %h4.h5.mb-3 Paramétrage
              .row
                .col-md-6
                  %table.table
                    %thead
                      %tr
                        %th{colspan: 2} Paramètres de la campagne
                    %tr
                      %td Date de début
                      %td= ldate @campaign.start_at
                    %tr
                      %td Date de fin
                      %td= ldate @campaign.end_at

                .col-md-6
                  %table.table
                    %thead
                      %tr
                        %th{colspan: 2} Motions
                    - @campaign.motions.each do |motion|
                      %tr
                        %td= motion.name
                        %td= t 'activerecord.attributes.motion.kinds.'+motion.kind

            .bg-light.p-3
              %h4.h5.m-3 Résultats

              - if Time.now > @campaign.end_at
                %table.table.table-bordered
                  %tr
                    %td
                    %th{colspan: 6} Resultats retenus
                    %th{colspan: 6} Resultats consultatifs

                  %tr
                    %th Electorats
                    %td{colspan: 6}= @campaign.get_voters(only_electors: true)
                    %td{colspan: 6}= @campaign.get_voters(only_electors: false)

                  %tr
                    %th
                    %th Oui
                    %th{colspan: 2} Non
                    %th Votants
                    %th Exprimés
                    %th Blancs

                    %th Oui
                    %th{colspan: 2} Non
                    %th Votants
                    %th Exprimés
                    %th Blancs

                  - @campaign.motions.where(kind: :binary).each do |motion|
                    %tr
                      %td= motion.name
                      %td= motion.votes.officials.where(result: "oui").count
                      %td{colspan: 2}= motion.votes.officials.where(result: "non").count
                      %td= motion.votes.officials.count
                      %td= motion.votes.officials.where("result IS NOT NULL").count
                      %td= motion.votes.officials.where(result: nil).count

                      %td= motion.votes.consultatives.where(result: "oui").count
                      %td{colspan: 2}= motion.votes.consultatives.where(result: "non").count
                      %td= motion.votes.consultatives.count
                      %td= motion.votes.consultatives.where("result IS NOT NULL").count
                      %td= motion.votes.consultatives.where(result: nil).count


                  %tr
                    %th
                    %th Oui
                    %th Non
                    %th Neutre
                    %th Votants
                    %th Exprimés
                    %th Blancs
                  - @campaign.motions.where(kind: :neutral).each do |motion|
                    %tr
                      %td= motion.name
                      %td= motion.votes.officials.where(result: "oui").count
                      %td= motion.votes.officials.where(result: "non").count
                      %td= motion.votes.officials.where(result: "neutre").count
                      %td= motion.votes.officials.count
                      %td= motion.votes.officials.where("result IS NOT NULL").count
                      %td= motion.votes.officials.where(result: nil).count

                      %td= motion.votes.consultatives.where(result: "oui").count
                      %td= motion.votes.consultatives.where(result: "non").count
                      %td= motion.votes.consultatives.where(result: "neutre").count
                      %td= motion.votes.consultatives.count
                      %td= motion.votes.consultatives.where("result IS NOT NULL").count
                      %td= motion.votes.consultatives.where(result: nil).count

                  - unless @campaign.motions.where(kind: :free).blank?
                    %tr
                      %th
                      %th{colspan: 3} Répartition des propositions
                      %th Votants
                      %th Exprimés
                      %th Blancs
                    - @campaign.motions.where(kind: :free).each do |motion|
                      %tr
                        %td= motion.name
                        %td{colspan: 3}
                          %ul.list-unstyled
                            - motion.votes.officials.select(:result, 'COUNT(*) as count').group(:result).each do |r|
                              %li.list-unstyled-item= "#{r.result} (#{r.count})"
                        %td= motion.votes.officials.count
                        %td= motion.votes.officials.where("result IS NOT NULL").count
                        %td= motion.votes.officials.where(result: nil).count

                        %td{colspan: 3}
                          %ul.list-unstyled
                            - motion.votes.consultatives.select(:result, 'COUNT(*) as count').group(:result).each do |r|
                              %li.list-unstyled-item= "#{r.result} (#{r.count})"
                        %td= motion.votes.consultatives.count
                        %td= motion.votes.consultatives.where("result IS NOT NULL").count
                        %td= motion.votes.consultatives.where(result: nil).count
              - else
                .alert.alert-danger
                  La période de vote n'est pas fini. Les résultats seront disponibles une fois les votes clos.
