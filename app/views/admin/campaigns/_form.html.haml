= form_for [:admin, campaign] do |f|
  - if campaign.errors.any?
    .alert.alert-danger
      %h3.h4 Merci de corriger les erreurs ci-dessous
      %ul.list
        - campaign.errors.full_messages.each do |msg|
          %li= msg

  .row
    .col-md-6
      .form-group
        = f.text_field :name, class: 'form-control', placeholder: 'Nom de la campagne'

      .form-group
        = f.label :description
        = f.text_field :description, class: 'form-control', placeholder: 'Courte description'

      .form-group
        = f.label :start_at
        = f.text_field :start_at, class: 'form-control datetimepicker', value: "#{ldate campaign.start_at}", data: {target: '#campaign_start_at', toggle: "datetimepicker"}

      .form-group
        = f.label :end_at
        = f.text_field :end_at, class: 'form-control datetimepicker', value: "#{ldate campaign.end_at}", data: {target: '#campaign_end_at', toggle: "datetimepicker"}

  %h3.mb-3 Table de votes

  .alert.alert-info
    %p
      Les tables de votes vous permettent de déterminer qui vote.
    %ul.ml-3
      %li En fonction du niveau de reconnaissance
      %li En s'il est membre ou pas

  .alert.alert-warning
    Il n'y a pas de distinction entre le vote du président d'une structure et le vote d'une personne physique.

  .row
    .col-md-6
      %h4 Les personnes physiques MEMBRES

      %table.table
        %tr
          %th Niveau de reconnaissance
          %th Statut de vote

        - User.get_levels.each do |level|
          = f.fields_for :voting_tables, @campaign.voting_tables.find_or_initialize_by(position: level, as_member: true) do |vt|
            %tr
              %td
                = level
                = vt.hidden_field :position, value: level
                = vt.hidden_field :as_member, value: true
              %td
                = vt.select :voting, options_for_select(VotingTable.get_votings, vt.object.voting), {}, class: 'form-control'

    .col-md-6
      %h4 Les personnes physiques NON MEMBRES

      %table.table
        %tr
          %th Niveau de reconnaissance
          %th Statut de vote

        - User.get_levels.each do |level|
          = f.fields_for :voting_tables, @campaign.voting_tables.find_or_initialize_by(position: level, as_member: false) do |vt|
            %tr
              %td
                = level
                = vt.hidden_field :position, value: level
                = vt.hidden_field :as_member, value: false
              %td
                = vt.select :voting, options_for_select(VotingTable.get_votings, vt.object.voting), {}, class: 'form-control'

    .col-md-6
      %h4 Les églises (représentées par leur président)

      %table.table
        %tr
          %th Statut de l'église
          %th Statut de vote

        = f.fields_for :voting_tables, @campaign.voting_tables.find_or_initialize_by(position: "eglises membres", as_member: true) do |vt|
          %tr
            %td
              MEMBRES
              = vt.hidden_field :position
              = vt.hidden_field :as_member, value: true
            %td
              = vt.select :voting, options_for_select(VotingTable.get_votings, vt.object.voting), {}, class: 'form-control'


        = f.fields_for :voting_tables, @campaign.voting_tables.find_or_initialize_by(position: "eglises non membres", as_member: false) do |vt|
          %tr
            %td
              NON MEMBRES
              = vt.hidden_field :position
              = vt.hidden_field :as_member, value: false
            %td
              = vt.select :voting, options_for_select(VotingTable.get_votings, vt.object.voting), {}, class: 'form-control'

    .col-md-6
      %h4 Les oeuvres (représentées par leur président)

      %table.table
        %tr
          %th Statut de l'oeuvre
          %th Statut de vote

        = f.fields_for :voting_tables, @campaign.voting_tables.find_or_initialize_by(position: "oeuvres membres", as_member: true) do |vt|
          %tr
            %td
              MEMBRES
              = vt.hidden_field :position
              = vt.hidden_field :as_member, value: true
            %td
              = vt.select :voting, options_for_select(VotingTable.get_votings, vt.object.voting), {}, class: 'form-control'


        = f.fields_for :voting_tables, @campaign.voting_tables.find_or_initialize_by(position: "oeuvres non membres", as_member: false) do |vt|
          %tr
            %td
              NON MEMBRES
              = vt.hidden_field :position
              = vt.hidden_field :as_member, value: false
            %td
              = vt.select :voting, options_for_select(VotingTable.get_votings, vt.object.voting), {}, class: 'form-control'


  .row
    .col-md-12
      %h3 Motions
      %table.table
        %thead
          %tr
            %th Ordre
            %th Nom
            %th Type
            %th
        %tbody#motions
          = f.fields_for :motions do |ff|
            = render 'motion_fields', :f => ff

          %tr
            %td{colspan: 3}
              .form-group
                = link_to_add_association f, :motions, class: "btn btn-sm btn-primary", data: {"association-insertion-node" => "tbody#motions", "association-insertion-method" => "prepend"} do
                  = icon 'fa', "plus"
                  Ajouter une motion


  .float-right
    %button.btn.btn-primary{type: :submit}
      Enregistrer
