.breadcrumbs
  .page-header
    %h1
      Résultat de la campagne :
      %b= @campaign.name


.content.mt-3
  .container-fluid
    .bg-light.p-3

      - if @campaign.closed?
        %table.table.table-bordered
          %tr
            %td
            %th{colspan: 6} Resultats retenus
            %th{colspan: 6} Resultats consultatifs

          %tr
            %th Electorats
            %th{colspan: 6}= @campaign.motions.map{ |m| m.votes.officials.count }.first
            %th{colspan: 6}= @campaign.motions.map{ |m| m.votes.consultatives.count }.first


          - unless @campaign.motions.where(kind: :binary).blank?
            %tr
              %th
              %th Oui
              %th{colspan: 2} Non
              %th Votants
              %th Exprimés
              %th Blancs

              %th Oui
              %th{colspan: 2} Non
              %th Votants
              %th Exprimés
              %th Blancs

            - @campaign.motions.where(kind: :binary).each do |motion|
              %tr
                %td= motion.name
                %td= motion.votes.officials.where(result: "oui").count
                %td{colspan: 2}= motion.votes.officials.where(result: "non").count
                %td= motion.votes.officials.count
                %td= motion.votes.officials.where("result IS NOT NULL").count
                %td= motion.votes.officials.where(result: nil).count

                %td= motion.votes.consultatives.where(result: "oui").count
                %td{colspan: 2}= motion.votes.consultatives.where(result: "non").count
                %td= motion.votes.consultatives.count
                %td= motion.votes.consultatives.where("result IS NOT NULL").count
                %td= motion.votes.consultatives.where(result: nil).count


          - unless @campaign.motions.where(kind: :neutral).blank?
            %tr
              %th
              %th Oui
              %th Non
              %th Neutre
              %th Votants
              %th Exprimés
              %th Blancs
              %th Oui
              %th Non
              %th Neutre
              %th Votants
              %th Exprimés
              %th Blancs
            - @campaign.motions.where(kind: :neutral).each do |motion|
              %tr
                %td= motion.name
                %td= motion.votes.officials.where(result: "oui").count
                %td= motion.votes.officials.where(result: "non").count
                %td= motion.votes.officials.where(result: "neutre").count
                %td= motion.votes.officials.count
                %td= motion.votes.officials.where("result IS NOT NULL").count
                %td= motion.votes.officials.where(result: nil).count

                %td= motion.votes.consultatives.where(result: "oui").count
                %td= motion.votes.consultatives.where(result: "non").count
                %td= motion.votes.consultatives.where(result: "neutre").count
                %td= motion.votes.consultatives.count
                %td= motion.votes.consultatives.where("result IS NOT NULL").count
                %td= motion.votes.consultatives.where(result: nil).count

          - unless @campaign.motions.where(kind: :free).blank?
            %tr
              %th
              %th{colspan: 3} Répartition des propositions
              %th Votants
              %th Exprimés
              %th Blancs
            - @campaign.motions.where(kind: :free).each do |motion|
              %tr
                %td= motion.name
                %td{colspan: 3}
                  %ul.list-unstyled
                    - motion.votes.officials.select(:result, 'COUNT(*) as count').group(:result).each do |r|
                      %li.list-unstyled-item= "#{r.result} (#{r.count})"
                %td= motion.votes.officials.count
                %td= motion.votes.officials.where("result IS NOT NULL").count
                %td= motion.votes.officials.where(result: nil).count

                %td{colspan: 3}
                  %ul.list-unstyled
                    - motion.votes.consultatives.select(:result, 'COUNT(*) as count').group(:result).each do |r|
                      %li.list-unstyled-item= "#{r.result} (#{r.count})"
                %td= motion.votes.consultatives.count
                %td= motion.votes.consultatives.where("result IS NOT NULL").count
                %td= motion.votes.consultatives.where(result: nil).count

      - elsif @campaign.coming?
        .alert.alert-danger
          La campagne de vote n'est pas commencé.

      - elsif @campaign.opened?
        .alert.alert-success
          La campagne de vote est en cours.
          %br
          %b Votes retenus :
          = "#{@campaign.motions.map{ |m| m.votes.officials.count }.first} ont voté / #{@structure.members.count} membres"
          %br
          %b Votes consultatifs :
          = "Il y a #{@campaign.motions.map{ |m| m.votes.consultatives.count}.first} votes consultatifs"
